---
// Theme toggle component for dark/light mode switching
---

<button
	id="theme-toggle"
	type="button"
	class="flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100 hover:bg-gray-200 dark:bg-gray-800 dark:hover:bg-gray-700 transition-colors duration-200"
	aria-label="Toggle dark mode"
>
	<!-- Sun icon for light mode -->
	<svg
		id="theme-toggle-light-icon"
		class="w-5 h-5 text-gray-600 dark:text-gray-300"
		fill="currentColor"
		viewBox="0 0 20 20"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path
			fill-rule="evenodd"
			d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
			clip-rule="evenodd"
		></path>
	</svg>
	
	<!-- Moon icon for dark mode -->
	<svg
		id="theme-toggle-dark-icon"
		class="w-5 h-5 text-gray-600 dark:text-gray-300 hidden"
		fill="currentColor"
		viewBox="0 0 20 20"
		xmlns="http://www.w3.org/2000/svg"
	>
		<path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
	</svg>
</button>

<script>
	// Theme toggle functionality
	const themeToggle = document.getElementById('theme-toggle');
	const lightIcon = document.getElementById('theme-toggle-light-icon');
	const darkIcon = document.getElementById('theme-toggle-dark-icon');
	
	// Get theme from localStorage or default to light
	function getTheme() {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
			return 'dark';
		}
		return 'light';
	}
	
	// Set theme
	function setTheme(theme:string) {
		if (theme === 'dark') {
			document.documentElement.classList.add('dark');
			lightIcon?.classList.add('hidden');
			darkIcon?.classList.remove('hidden');
		} else {
			document.documentElement.classList.remove('dark');
			lightIcon?.classList.remove('hidden');
			darkIcon?.classList.add('hidden');
		}
		localStorage.setItem('theme', theme);
	}
	
	// Initialize theme
	const currentTheme = getTheme();
	setTheme(currentTheme!);
	
	// Toggle theme on button click
	themeToggle?.addEventListener('click', () => {
		const currentTheme = getTheme();
		const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
		setTheme(newTheme);
	});
	
	// Listen for system theme changes
	window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
		if (!localStorage.getItem('theme')) {
			setTheme(e.matches ? 'dark' : 'light');
		}
	});
</script>
